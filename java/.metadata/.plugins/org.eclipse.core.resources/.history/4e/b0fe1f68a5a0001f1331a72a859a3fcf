import java.awt.MediaTracker;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

public class ChatServer {
	
	private ArrayList<ServerWorker> list = new ArrayList<ServerWorker>;
	
	private class ServerWorker implements Runnable{

		private Socket socket;
		private BufferedReader br;
		private PrintWriter pw;
		private String user;
		public ServerWorker(Socket socket) {
			this.socket = socket;
			user = socket.getInetAddress().toString();
		}
		private void chatting() throws Exception{
			br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			pw = new PrintWriter(socket.getOutputStream(),true);
			sendMessage(user+"님이 입장하셨습니다.");
			try {
				while(true) {
					String message = br.readLine();
					if(message.trim().equals("종료")||message.equals("null")||message == null) {
						break;
					}
					else {
						sendMessage(user +"님 : "+message);
					}
				}
			}catch (Exception e) {
				// TODO: handle exception
			}
		}
		
		@Override
		public void run() {
			try {
				chatting();
			}catch (Exception e) {
				// TODO: handle exception
			}finally {
				try {
					
				}catch (Exception e) {
					// TODO: handle exception
				}
			}
		}
		
	}

	public void go() throws Exception{
		ServerSocket serverSocket = null;
		try {
			serverSocket = new ServerSocket(9002);
			System.out.println("다중 채팅 준비");
			while(true) {
				Socket socket = serverSocket.accept();
				ServerWorker sw = new ServerWorker(socket);
				list.add(sw);
				Thread th = new Thread(sw);
				th.start();
			}
		}catch (Exception e) {
			// TODO: handle exception
		}finally {
			if(serverSocket!=null) {
				serverSocket.close();
				System.out.println("chat을 종료합니다.");
			}
		}
	}
	
	public void sendMessage(String message) {
		System.out.println(message);
		for(int i=0;i<list.size();i++) {
			list.get(i).pw.println(message);
		}
	}
	public static void main(String[] args) {
		new ChatServer().go();
	}

}
