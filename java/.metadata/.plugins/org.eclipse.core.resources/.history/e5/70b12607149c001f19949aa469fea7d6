import java.util.Scanner;
import java.util.Vector;

class User {
	String name;
	int type, num;

	public User(String name, int type, int num) {
		super();
		this.name = name;
		this.type = type;
		this.num = num;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}

	public int getNum() {
		return num;
	}

	public void setNum(int num) {
		this.num = num;
	}

}

class Seat {
	String[] seatS = new String[10];
	String[] seatA = new String[10];
	String[] seatB = new String[10];

	public String[] getSeatS() {
		return seatS;
	}

	public void setSeatS(String[] seatS) {
		this.seatS = seatS;
	}

	public String[] getSeatA() {
		return seatA;
	}

	public void setSeatA(String[] seatA) {
		this.seatA = seatA;
	}

	public String[] getSeatB() {
		return seatB;
	}

	public void setSeatB(String[] seatB) {
		this.seatB = seatB;
	}

	
}

public class Reservation {
	Vector<User> user = new Vector<User>();
	Seat seat = new Seat();
	boolean flag = false;
	Scanner sc = new Scanner(System.in);
	
	private void reserve() {
		while (true) {
			System.out.print("좌석 구분 S(1),A(2),B(3),뒤로가기(4) >> ");
			int n = sc.nextInt();
			String[] tmp;
			if (n == 1)
				tmp = this.seat.getSeatS();
			else if (n == 2)
				tmp = this.seat.getSeatA();
			else if (n == 3)
				tmp = this.seat.getSeatB();
			else if (n == 4) {
				break;
			} else
				continue;
			for (int i = 0; i < tmp.length; i++) {
				if (tmp[i] == null)
					System.out.print("--- ");
				else
					System.out.print(tmp[i]+" ");
			}
			System.out.println();
			System.out.print("이름 >> ");
			String name = sc.next();
			System.out.println("번호 >> ");
			while (true) {
				int num=0;
				try{
					num = sc.nextInt();
				}catch (Exception e) {
					System.out.println("예약 가능한 번호를 입력하세요.");
				}
				if (num < 0 || n > 10 || tmp[num] != null) {
					System.out.println("예약 가능한 번호를 입력하세요.");
					continue;
				} else {
					tmp[num] = name;
					if(n==1) this.seat.setSeatS(tmp);
					if(n==2) this.seat.setSeatA(tmp);
					if(n==3) this.seat.setSeatB(tmp);
					user.add(new User(name, n, num));
					break;
				}
			}
			break;
		}
	}

	private void check() {
		String[] tmp = this.seat.getSeatS();
		for (int i = 0; i < tmp.length; i++) {
			if (tmp[i] == null)
				System.out.print("--- ");
			else
				System.out.print(tmp[i]+" ");
		}
		System.out.println();
		tmp = this.seat.getSeatA();
		for (int i = 0; i < tmp.length; i++) {
			if (tmp[i] == null)
				System.out.print("--- ");
			else
				System.out.print(tmp[i]+" ");
		}
		System.out.println();
		tmp = this.seat.getSeatB();
		for (int i = 0; i < tmp.length; i++) {
			if (tmp[i] == null)
				System.out.print("--- ");
			else
				System.out.print(tmp[i]+" ");
		}
		System.out.println("\n조회를 완료하였습니다.");
	}

	private void cancel() {
		while (true) {
			System.out.print("좌석 구분 S(1),A(2),B(3),뒤로가기(4) >> ");
			Scanner sc2 = new Scanner(System.in);
			int n = sc2.nextInt();
			String[] tmp;
			if (n == 1)
				tmp = this.seat.getSeatS();
			else if (n == 2)
				tmp = this.seat.getSeatA();
			else if (n == 3)
				tmp = this.seat.getSeatB();
			else if (n == 4) {
				break;
			} else
				continue;
			for (int i = 0; i < tmp.length; i++) {
				if (tmp[i] == null)
					System.out.print("--- ");
				else
					System.out.print(tmp[i]+" ");
			}
			System.out.println();
			while (true) {
				System.out.print("이름 >> ");
				String name = sc2.next();
				if(name==null) continue;
				boolean flag=true;
				for(int i=0;i<this.user.size();i++) {
					User man = this.user.get(i);
					if(man.getName().equals(name)) {
						int manType=man.getType();
						int manSeat=man.getNum();
						flag=false;
						if(manType==1) {
							tmp = this.seat.getSeatS();
							tmp[manSeat]="";
							this.seat.setSeatS(tmp);
						}
						else if(manType==2) {
							tmp = this.seat.getSeatA();
							tmp[manSeat]="";
							this.seat.setSeatA(tmp);
						}
						else if(manType==3) {
							tmp = this.seat.getSeatB();
							tmp[manSeat]="";
							this.seat.setSeatB(tmp);
						}
						this.user.remove(man);
						break;
					}
				}
				if(flag) {
					System.out.println("이름을 찾을 수 없습니다.");
					continue;
				}
				break;
			}
			break;
		}
	}

	private void end() {
		System.out.println("프로그램을 종료합니다.");
		this.flag = true;
	}

	private void run() {
		System.out.println("명품 콘서트 예약 시스템입니다.");
		while (true) {
			System.out.print("예약:1, 조회:2, 취소:3, 끝내기:4 >> ");
			Scanner sc1 = new Scanner(System.in);
			int a = sc1.nextInt();
			switch (a) {
			case 1:
				this.reserve();
				break;
			case 2:
				this.check();
				break;
			case 3:
				this.cancel();
				break;
			case 4:
				this.end();
				break;
			default:
				break;
			}
			if (flag)
				break;
		}
	}

	public static void main(String[] args) {
		new Reservation().run();
	}

}
