import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class BoardEx {

	private Scanner sc = new Scanner(System.in);
	private Connection conn;
	Statement stmt;
	PreparedStatement pstmt;
	ResultSet rs;

	public BoardEx() {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			String url = "jdbc:mysql://localhost:3306/haksa";
			String id = "root";
			String pw = "1234";
			conn = DriverManager.getConnection(url, id, pw);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void list() {
		System.out.println("\n[게시판 목록]");
		System.out.println("---------------------------------------");
		System.out.printf("%-6s%-12s%-16s%-40s\n", "no", "title", "content", "date");
		System.out.println("---------------------------------------");
		try {
			String sql = "" + "select bno,btitle,bcontent,bwriter,bdate from boards order by bno desc";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				Board board = new Board();
				board.setBno(rs.getInt("bno"));
				board.setBtitle(rs.getString("btitle"));
				board.setBcontent(rs.getString("bcontent"));
				board.setBwriter(rs.getString("bwriter"));
				board.setBdate(rs.getDate("bdate"));
				System.out.printf("%-6s%-12s%-16s%-40s\n", board.getBno(), board.getBtitle(), board.getBcontent(),
						board.getBdate());
			}
			rs.close();
			pstmt.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		mainMenu();
	}

	public void mainMenu() {
		System.out.println();
		System.out.println("---------------------------------------");
		System.out.println("메인메뉴 : 1.Create | 2. Read | 3.Clear | 4.종료");
		System.out.println("메뉴 선택 >> ");
		String menuNo = sc.nextLine();
		System.out.println();
		switch (menuNo) {
		case "1":
			create();
			break;
		case "2":
			read();
			break;
		case "3":
			clear();
			break;
		case "4":
			exit();
		}
	}

	private void exit() {
		System.out.println("프로그램 종료");
		System.exit(0);
	}

	private void clear() {
		System.out.println("[게시물 전체 삭제]");
		System.out.println("---------------------------------------");
		System.out.println("보조메뉴 : 1.Ok | 2.Cancel");
		System.out.println("메뉴 선택 >> ");
		String menuNo = sc.nextLine();
		if (menuNo.equals("1")) {
			try {
				String sql = "truncate table boards";
				PreparedStatement pstmt = conn.prepareStatement(sql);
				pstmt.executeUpdate();
				pstmt.close();
			} catch (SQLException e) {
			}
		}
		list();
	}

	private void read() {
		System.out.println("[게시물 읽기]");
		System.out.println("bno : ");
		int bno = 0;
		try {
			bno = sc.nextInt();
			sc.nextLine();
		} catch (Exception e) {
		}
		try {
			String sql = "select bno,btitle,bcontent,bwriter,bdate from boards where bno=?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, bno);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				Board board = new Board();
				board.setBno(rs.getInt("bno"));
				board.setBtitle(rs.getString("btitle"));
				board.setBcontent(rs.getString("bcontent"));
				board.setBwriter(rs.getString("bwriter"));
				board.setBdate(rs.getDate("bdate"));
				System.out.println("---------------------------------------");
				System.out.println("번호 : " + board.getBno());
				System.out.println("제목 : " + board.getBtitle());
				System.out.println("내용 : " + board.getBcontent());
				System.out.println("글쓴이 : " + board.getBwriter());
				System.out.println("날짜 : " + board.getBdate());
				System.out.println("---------------------------------------");
				System.out.println("보조메뉴 : 1.Update | 2.Delete | 3.List");
				System.out.println("메뉴 선택 >> ");
				String menuNo = sc.nextLine();
				System.out.println();
				if (menuNo.equals("1")) {
					update(board);
				} else if (menuNo.equals("2")) {
					delete(board);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		list();
	}

	private void delete(Board board) {
		try {
			String sql = "delete from boards where bno=?";
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, board.getBno());
			pstmt.executeUpdate();
			pstmt.close();
		} catch (SQLException e) {
		}
		list();
	}

	private void update(Board board) {
		System.out.println("수정 내용 입력");
		;
		System.out.println("제목 : >> ");
		board.setBtitle(sc.nextLine());
		System.out.println("내용 : >> ");
		board.setBcontent(sc.nextLine());
		System.out.println("글쓴이 : >> ");
		board.setBwriter(sc.nextLine());
		System.out.println("---------------------------------------");
		System.out.println("보조메뉴 : 1.Ok | 2.Cancel");
		System.out.println("메뉴 선택 >> ");
		String menuNo = sc.nextLine();
		if (menuNo.equals("1")) {
			try {
				String sql = "update boards set btitle=?,bcontent=?,bwriter=? where bno=?";
				PreparedStatement pstmt = conn.prepareStatement(sql);
				pstmt.setString(1, board.getBtitle());
				pstmt.setString(2, board.getBcontent());
				pstmt.setString(3, board.getBwriter());
				pstmt.setInt(4, board.getBno());
				pstmt.executeUpdate();
				pstmt.close();
			} catch (SQLException e) {
			}
		}
	}

	public void create() {
		Board board = new Board();
		System.out.println("[새 게시물 입력]");
		System.out.println("제목 : >> ");
		board.setBtitle(sc.nextLine());
		System.out.println("내용 : >> ");
		board.setBcontent(sc.nextLine());
		System.out.println("글쓴이 : >> ");
		board.setBwriter(sc.nextLine());
		System.out.println("---------------------------------------");
		System.out.println("보조메뉴 : 1.Ok | 2.Cancel");
		System.out.println("메뉴 선택 >> ");
		String menuNo = sc.nextLine();
		if (menuNo.equals("1")) {
			try {
				String sql = "insert into boards(btitle,bcontent,bwriter,bdate) values(?,?,?,now())";
				pstmt = conn.prepareStatement(sql);
				pstmt.setString(1, board.getBtitle());
				pstmt.setString(2, board.getBcontent());
				pstmt.setString(3, board.getBwriter());
				pstmt.executeUpdate();
				pstmt.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		list();
	}

	public static void main(String[] args) {
		BoardEx b = new BoardEx();
		b.list();
	}
}
